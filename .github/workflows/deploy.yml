name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
      - '**.txt'
      - '.vscode/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      NODE_ENV: production
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
          components: rustfmt, clippy
          profile: minimal

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build
        env:
          VITE_APP_API_URL: 'https://${{ github.repository_owner }}.github.io/beatflow'
          VITE_APP_WS_URL: 'wss://api.beatflow.app'
          VITE_APP_ENVIRONMENT: ${{ inputs.environment || 'production' }}
          VITE_APP_VERSION: ${{ github.sha }}
          VITE_APP_BUILD_TIME: ${{ steps.timestamp.outputs.time }}
          VITE_APP_COMMIT_SHA: ${{ github.sha }}
          VITE_APP_BRANCH: ${{ github.ref_name }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./frontend/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Display deployment info
        run: |
          echo "üöÄ Deployment Status: ${{ job.status }}"
          echo "üåç Deployed URL: ${{ steps.deployment.outputs.page_url }}"
          echo "üìä Build artifacts available in Actions tab"
          echo "üìù Deployment report available in Artifacts" 