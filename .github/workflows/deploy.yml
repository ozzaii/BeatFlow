name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.cargo
            target
          key: ${{ runner.os }}-deps-${{ hashFiles('**/yarn.lock', '**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
          cargo install wasm-pack

      - name: Build WebAssembly
        run: |
          cd wasm
          wasm-pack build --target web
          cd ..

      - name: Build frontend
        run: |
          yarn build
        env:
          REACT_APP_API_URL: https://${{ github.repository_owner }}.github.io/beatflow
          REACT_APP_WS_URL: wss://api.beatflow.app
          REACT_APP_ENVIRONMENT: production
          CI: false

      - name: Run performance checks
        run: |
          yarn test:performance
          yarn lighthouse
        continue-on-error: true

      - name: Optimize assets
        run: |
          npx svgo -f dist/icons
          find dist -type f -name "*.js" -exec gzip -9 -k {} \;
          find dist -type f -name "*.css" -exec gzip -9 -k {} \;
          find dist -type f -name "*.wasm" -exec gzip -9 -k {} \;

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 